import { ref, onMounted, onUnmounted } from "vue";
import { Geolocation, Position } from "@capacitor/geolocation";
// import { usePostRequest } from "@/composables/useApi";
// import { LocalNotifications } from "@capacitor/local-notifications";

const latitude = ref<number | null>(null);
const longitude = ref<number | null>(null);
const watchId = ref<string | null>(null);

export function useGeolocation() {
  // ‚úÖ Fun√ß√£o para iniciar a observa√ß√£o da localiza√ß√£o do usu√°rio
  async function startWatching() {
    watchId.value = await Geolocation.watchPosition(
      { enableHighAccuracy: true },
      async (position: Position | null, err) => {
        if (err) {
          console.error("‚ùå Erro ao obter geolocaliza√ß√£o:", err);
          return;
        }

        if (position) {
          latitude.value = position.coords.latitude;
          longitude.value = position.coords.longitude;
          console.log(`üìç Nova localiza√ß√£o: ${latitude.value}, ${longitude.value}`);

          // üöÄ Verificar se est√° pr√≥ximo de uma √°rea de risco
          // await verificarRisco(latitude.value, longitude.value);
        }
      }
    );
  }

  // ‚úÖ Fun√ß√£o para parar a observa√ß√£o da localiza√ß√£o
  function stopWatching() {
    if (watchId.value) {
      Geolocation.clearWatch({ id: watchId.value });
      watchId.value = null;
    }
  }

  // ‚úÖ Fun√ß√£o para verificar se o usu√°rio est√° dentro de uma √°rea de risco
  // async function verificarRisco(lat: number, lng: number) {
  //   try {
  //     const response = await usePostRequest("/get-polygons", { latitude: lat, longitude: lng });

  //     if (response?.polygons?.length > 0) {
  //       console.log("‚ö†Ô∏è √Årea de risco detectada!");
  //       await enviarNotificacao("‚ö†Ô∏è Aten√ß√£o!", "Voc√™ est√° pr√≥ximo de uma √°rea de risco!", lat, lng);
  //     }
  //   } catch (error) {
  //     console.error("‚ùå Erro ao buscar √°reas de risco:", error);
  //   }
  // }

  // ‚úÖ Fun√ß√£o para exibir notifica√ß√£o quando estiver pr√≥ximo de uma √°rea de risco
  // async function enviarNotificacao(titulo: string, mensagem: string, lat: number, lng: number) {
  //   await LocalNotifications.requestPermissions();

  //   await LocalNotifications.schedule({
  //     notifications: [
  //       {
  //         id: new Date().getTime(),
  //         title: titulo,
  //         body: mensagem,
  //         actionTypeId: "abrir_mapa",
  //         extra: { latitude: lat, longitude: lng },
  //       },
  //     ],
  //   });
  // }

  // ‚úÖ Iniciar e parar a geolocaliza√ß√£o quando o composable for montado/desmontado
  onMounted(startWatching);
  onUnmounted(stopWatching);

  return {
    latitude,
    longitude,
    startWatching,
    stopWatching,
  };
}
